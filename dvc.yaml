# we will deal with the stages in this file
# whenever we will run the dvc repro command it will run this file

stages:
  load_data: # first stage
      cmd: python src/load_data.py --config=params.yaml
      deps: # to specify on which dependencies this stage is dependent
      - src/get_data.py
      - src/load_data.py
      - data_given/fatdat.txt
      outs:
      - data/raw/fatdat.csv

  split_data: # second stage splitting the data
    cmd: python src/split_data.py --config=params.yaml
    deps:
    - src/split_data.py
    - data/raw/fatdat.csv
    outs:
    - data/processed/train_fatdat.csv
    - data/processed/test_fatdat.csv 

  train_and_evaluate:
    cmd: python src/train_and_evaluate.py --config=params.yaml
    deps:
    - data/processed/train_fatdat.csv
    - data/processed/test_fatdat.csv
    - src/train_and_evaluate.py
    # params:
    # - estimators.ElasticNet.params.alpha
    # - estimators.ElasticNet.params.l1_ratio
    # metrics:
    # - report/scores.json:
    #     cache: false
    # - report/params.json:
    #     cache: false
    # outs:
    # - saved_models/model.joblib

  log_production_model:
    cmd: python src/log_production_model.py --config=params.yaml
    deps:
    - src/log_production_model.py